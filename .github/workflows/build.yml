name: build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  BUILDKIT_INLINE_CACHE: 1
  CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}

jobs:
  docker_build_push:
    if: true == false
    runs-on: ubuntu-latest
    name: build-with-base
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the ci - image
        uses: docker/build-push-action@v3
        with:
          tags: |
            ghcr.io/${{ github.repository_owner }}/poetry-test-app:ci
          build-args: |
            "CURRENT_BRANCH=${{ github.head_ref || github.ref_name }}"
          load: true
          target: ci
          file: ./Dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display ci images and history
        run: |
          docker images
          docker history -H ghcr.io/sparrovv/poetry-test-app:ci-${{ github.head_ref || github.ref_name }}

      - name: run tests
        run: docker compose -f "docker-compose.ci.yml" run citest pytest

      - name: Build and push the release docker image
        uses: docker/build-push-action@v3
        with:
          tags: |
            ghcr.io/${{ github.repository_owner }}/poetry-test-app:release-${{ github.sha }}
          build-args: |
            "CURRENT_BRANCH=${{ github.head_ref || github.ref_name }}"
            "REVISION=${{ github.sha }}"
          push: true
          target: release
          file: ./Dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_with_docker_compose:
    runs-on: ubuntu-latest
    name: build
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build images
        run: |
          docker compose -f "docker-compose.ci.yml" build ci

      - name: Display ci history
        run: |
          docker history -H ghcr.io/sparrovv/poetry-test-app:ci-${{ github.head_ref || github.ref_name }}

      - name: run tests
        run: docker compose -f "docker-compose.ci.yml" run ci pytest

      - name: release images
        env:
          IMAGE_NAME: "ghcr.io/sparrovv/poetry-test-app"
        run: |
          docker compose -f "docker-compose.ci.yml" push ci

          docker tag $IMAGE_NAME:ci-$CURRENT_BRANCH $IMAGE_NAME:ci-${{ github.sha }}
          docker push $IMAGE_NAME:ci-${{ github.sha }}

          docker compose -f "docker-compose.ci.yml" build release
          docker compose -f "docker-compose.ci.yml" push release